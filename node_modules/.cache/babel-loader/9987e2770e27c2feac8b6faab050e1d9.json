{"ast":null,"code":"var _jsxFileName = \"/Users/diego_ramirezs/Documents/speedline/proto/src/App.js\";\nimport React from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow } from 'google-maps-react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClose = props => {\n      this.setState({\n        showInfoWindow: false,\n        activeMarker: null\n      });\n    };\n\n    this.displayInfoWindows = () => {\n      return this.state.stores.map((store, index) => {\n        console.log(store);\n        return /*#__PURE__*/React.createElement(InfoWindow, {\n          key: index,\n          visible: this.state.mapLoaded,\n          location: {\n            lat: store.lat,\n            lng: store.lng\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }\n        }, store.city));\n      });\n    };\n\n    this.handleMapIdle = () => {\n      this.setState({\n        mapLoaded: true,\n        showInfoWindow: true\n      });\n    };\n\n    this.state = {\n      showInfoWindow: false,\n      //hide/show infowindow\n      mapLoaded: false,\n      stores: [{\n        city: \"Dease Lake\",\n        lat: 58.4374,\n        lng: -129.9994\n      }, {\n        city: \"Fort Nelson\",\n        lat: 58.8050,\n        lng: -122.6972\n      }, {\n        city: \"Terrace\",\n        lat: 54.5182,\n        lng: -128.6032\n      }, {\n        city: \"Prince George\",\n        lat: 53.9171,\n        lng: -122.7497\n      }, {\n        city: \"Whistler\",\n        lat: 50.1163,\n        lng: -122.9574\n      }, {\n        city: \"Revelstoke\",\n        lat: 50.9981,\n        lng: -118.1957\n      }, {\n        city: \"Creston\",\n        lat: 49.0955,\n        lng: -116.5135\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      showInfoWindow: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 5.2,\n      style: {\n        maxWidth: '70%',\n        maxHeight: '70%'\n      },\n      initialCenter: {\n        lat: 54.6569,\n        lng: -124.7417\n      },\n      onIdle: this.handleMapIdle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, this.state.showInfoWindow && this.state.stores.map((store, index) => {\n      return /*#__PURE__*/React.createElement(InfoWindow, {\n        key: index,\n        visible: this.state.showInfoWindow,\n        location: {\n          lat: store.lat,\n          lng: store.lng\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }\n      }, store.city));\n    })));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDAH-HZXwsL1DwvM7i0p3pPtrwrnzQhUxs'\n})(App);","map":{"version":3,"sources":["/Users/diego_ramirezs/Documents/speedline/proto/src/App.js"],"names":["React","Map","GoogleApiWrapper","InfoWindow","App","Component","constructor","props","onClose","setState","showInfoWindow","activeMarker","displayInfoWindows","state","stores","map","store","index","console","log","mapLoaded","lat","lng","city","handleMapIdle","componentDidMount","render","google","maxWidth","maxHeight","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { \n  Map, \n  GoogleApiWrapper,\n  InfoWindow\n} from 'google-maps-react';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      showInfoWindow: false, //hide/show infowindow\n      mapLoaded: false,\n      stores: [\n        {city: \"Dease Lake\", lat: 58.4374, lng: -129.9994},\n        {city: \"Fort Nelson\", lat: 58.8050, lng: -122.6972},\n        {city: \"Terrace\", lat: 54.5182, lng: -128.6032},\n        {city: \"Prince George\", lat: 53.9171, lng: -122.7497},\n        {city: \"Whistler\", lat: 50.1163, lng: -122.9574},\n        {city: \"Revelstoke\", lat: 50.9981, lng: -118.1957},\n        {city: \"Creston\", lat: 49.0955, lng: -116.5135}\n      ]\n    }\n  }\n\n  onClose = (props) => {\n    this.setState({\n      showInfoWindow: false,\n      activeMarker: null\n    });\n  }\n\n\n  displayInfoWindows = () => {\n    return this.state.stores.map((store, index) => {\n      console.log(store);\n      return (\n        <InfoWindow \n          key={index}\n          visible={this.state.mapLoaded}\n          location={{\n            lat: store.lat,\n            lng: store.lng\n          }}\n        >\n          <span>{store.city}</span>\n        </InfoWindow>  \n      );\n    })\n  }\n\n  handleMapIdle = () => {\n    this.setState({\n      mapLoaded: true,\n      showInfoWindow: true\n    });\n  }\n\n  componentDidMount(){\n    this.setState({\n      showInfoWindow: true\n    })\n  }\n  \n  render(){\n    return (\n      <div className=\"App\">\n        <Map \n          google={this.props.google}\n          zoom={5.2}\n          style={{maxWidth: '70%', maxHeight: '70%'}}\n          initialCenter={{\n            lat: 54.6569,\n            lng: -124.7417\n          }}\n          onIdle={this.handleMapIdle}\n        >\n          {this.state.showInfoWindow && this.state.stores.map((store, index) => {\n              return (\n                <InfoWindow \n                  key={index}\n                  visible={this.state.showInfoWindow}\n                  location={{\n                    lat: store.lat,\n                    lng: store.lng\n                  }}\n                >\n                  <span>{store.city}</span>\n                </InfoWindow>  \n              );\n            })\n          }\n        </Map>\n      </div>\n    );\n  }\n  \n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDAH-HZXwsL1DwvM7i0p3pPtrwrnzQhUxs'\n})(App);\n"]},"metadata":{},"sourceType":"module"}