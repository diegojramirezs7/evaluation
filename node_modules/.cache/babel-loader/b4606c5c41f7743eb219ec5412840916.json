{"ast":null,"code":"import _classCallCheck from\"/Users/diego_ramirezs/Documents/speedline/proto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/diego_ramirezs/Documents/speedline/proto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/diego_ramirezs/Documents/speedline/proto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/diego_ramirezs/Documents/speedline/proto/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import GoogleMap from'google-map-react';import CityInfo from'./CityInfo';import axios from'axios';import Header from'./Header';import InfoTable from'./InfoTable';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={center:{},stores:[],showInfo:false,activeStore:{}};_this.handleClick=function(){//display/hide info table\n_this.setState({showInfo:!_this.state.showInfo});};return _this;}_createClass(App,[{key:\"getCenter\",value:function getCenter(){// get the center of the map by getting midpoint of northernmost/southernmost cities\n// and easternmost/westernmost cities\nvar stores=this.state.stores;var maxLat=0;var minLat=100;var maxLong=-300;var minLong=+300;for(var i=0;i<stores.length;i++){if(stores[i].coords.lat>maxLat){maxLat=stores[i].coords.lat;}else if(stores[i].coords.lat<minLat){minLat=stores[i].coords.lat;}if(stores[i].coords.lng>maxLong){maxLong=stores[i].coords.lng;}else if(stores[i].coords.lng<minLong){minLong=stores[i].coords.lng;}}var latitude=(maxLat+minLat)/2.0;var longitude=(maxLong+minLong)/2.0;this.setState({center:{lat:latitude,lng:longitude}});}},{key:\"componentDidMount\",value:function componentDidMount(){this.getCities();//update every half hour\nthis.intervalId=setInterval(this.getCities.bind(this),1000*60*30);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){//if component is not there, no need to fetch the data\nclearInterval(this.intervalID);}},{key:\"getCities\",value:function getCities(){var _this2=this;//fetch data from openWeatherMap API\naxios.get(\"http://api.openweathermap.org/data/2.5/group\",{params:{units:\"metric\",//list of city IDs\nid:\"6113365,5932311,6180144,5936286,5955902,6162949,6121621\",appid:\"d768b86ac2b5b13b09964365eb5f0128\"}}).then(function(response){var data=response.data.list;var cityWeathers=data.map(function(city){return{name:city.name,temp:city.main.temp,coords:{lat:city.coord.lat,lng:city.coord.lon},tempMin:city.main.temp_min,tempMax:city.main.temp_max,pressure:city.main.pressure,humidity:city.main.humidity,description:city.weather[0].description,windSpeed:city.wind.speed,icon:\"http://openweathermap.org/img/wn/\"+city.weather[0].icon+\".png\"};});_this2.setState({stores:cityWeathers});_this2.getCenter();});}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Header,{showAllInfo:this.handleClick,showInfo:this.state.showInfo}),/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},/*#__PURE__*/React.createElement(GoogleMap,{bootstrapURLKeys:{key:'AIzaSyDAH-HZXwsL1DwvM7i0p3pPtrwrnzQhUxs'},defaultCenter:{lat:54.0562,lng:-124.7414},defaultZoom:5.4,center:{lat:this.state.center.lat,lng:this.state.center.lng}},this.state.stores.map(function(store,index){var latitude=store.coords.lat;return/*#__PURE__*/React.createElement(CityInfo,{key:index,lat:Math.ceil(latitude),lng:Math.floor(store.coords.lng),store:store,cn:latitude>_this3.state.center.lat?'dropdown':'dropup'});})),this.state.showInfo&&/*#__PURE__*/React.createElement(InfoTable,{stores:this.state.stores})));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/diego_ramirezs/Documents/speedline/proto/src/App.js"],"names":["React","GoogleMap","CityInfo","axios","Header","InfoTable","App","state","center","stores","showInfo","activeStore","handleClick","setState","maxLat","minLat","maxLong","minLong","i","length","coords","lat","lng","latitude","longitude","getCities","intervalId","setInterval","bind","clearInterval","intervalID","get","params","units","id","appid","then","response","data","list","cityWeathers","map","city","name","temp","main","coord","lon","tempMin","temp_min","tempMax","temp_max","pressure","humidity","description","weather","windSpeed","wind","speed","icon","getCenter","key","store","index","Math","ceil","floor","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport GoogleMap from 'google-map-react';\nimport CityInfo from './CityInfo';\nimport axios from 'axios';\nimport Header from './Header';\nimport InfoTable from './InfoTable';\n\nclass App extends React.Component{\n  state = {\n    center: {},\n    stores: [],\n    showInfo: false,\n    activeStore: {}\n  }\n\n  intervalId;\n  \n  getCenter(){\n    // get the center of the map by getting midpoint of northernmost/southernmost cities\n    // and easternmost/westernmost cities\n    const stores = this.state.stores;\n    var maxLat = 0;\n    var minLat = 100;\n    var maxLong = -300;\n    var minLong = +300;\n    \n    for (let i = 0; i<stores.length; i++){\n      if (stores[i].coords.lat > maxLat){\n        maxLat = stores[i].coords.lat;\n      }else if(stores[i].coords.lat < minLat){\n        minLat = stores[i].coords.lat;\n      }\n\n      if (stores[i].coords.lng > maxLong){\n        maxLong = stores[i].coords.lng;\n      }else if(stores[i].coords.lng < minLong){\n        minLong = stores[i].coords.lng;\n      }\n    }\n\n    var latitude = (maxLat + minLat) / 2.0;\n    var longitude = (maxLong + minLong) / 2.0;\n\n    this.setState({\n      center: {lat: latitude, lng: longitude}\n    })\n  } \n\n  componentDidMount(){\n    this.getCities();\n\n    //update every half hour\n    this.intervalId = setInterval(this.getCities.bind(this), 1000*60*30)\n  }\n\n\n  componentWillUnmount(){\n    //if component is not there, no need to fetch the data\n    clearInterval(this.intervalID);\n  }\n\n\n  getCities(){\n    //fetch data from openWeatherMap API\n    axios.get(\"http://api.openweathermap.org/data/2.5/group\", {\n     params: {\n      units: \"metric\",\n      //list of city IDs\n      id: \"6113365,5932311,6180144,5936286,5955902,6162949,6121621\",\n      appid: \"d768b86ac2b5b13b09964365eb5f0128\"\n     }\n    }).then(response => {\n      var data = response.data.list;\n      const cityWeathers = data.map(city => {\n        return (\n          {\n            name: city.name,\n            temp: city.main.temp,\n            coords: {lat: city.coord.lat, lng: city.coord.lon},\n            tempMin: city.main.temp_min,\n            tempMax: city.main.temp_max,\n            pressure: city.main.pressure,\n            humidity: city.main.humidity,\n            description: city.weather[0].description,\n            windSpeed: city.wind.speed,\n            icon: \"http://openweathermap.org/img/wn/\"+city.weather[0].icon+\".png\"\n          }\n        );\n      });\n      this.setState({\n        stores: cityWeathers\n      });\n\n      this.getCenter();\n    });\n  }\n\n  handleClick = () => {\n    //display/hide info table\n    this.setState({\n      showInfo: !this.state.showInfo\n    })\n  }\n\n  render(){\n    return (\n      <div>\n        {\n          //\n        }\n        <Header \n          showAllInfo={this.handleClick}\n          showInfo={this.state.showInfo}\n        />\n        <div className=\"app\">\n         <GoogleMap\n          bootstrapURLKeys={{ key: 'AIzaSyDAH-HZXwsL1DwvM7i0p3pPtrwrnzQhUxs'}}\n          defaultCenter={{lat: 54.0562, lng: -124.7414}}\n          defaultZoom={5.4} \n          center={{lat: this.state.center.lat, lng: this.state.center.lng}}\n        >\n\n            {\n              //for every store, show it on the map with the appropriate info\n            }\n            {this.state.stores.map((store, index) => {\n                const latitude = store.coords.lat;\n                return (\n                  <CityInfo \n                    key={index} \n                    lat={Math.ceil(latitude)} \n                    lng={Math.floor(store.coords.lng)} \n                    store={store}\n                    cn={(latitude > this.state.center.lat)?'dropdown':'dropup'}\n                  />\n                );\n              })\n            }\n\n          </GoogleMap>\n          \n          {\n            //show/hide detailed info table when user clicks button on the header\n          }\n\n          {this.state.showInfo && \n            <InfoTable \n              stores={this.state.stores}\n            />\n          }\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}