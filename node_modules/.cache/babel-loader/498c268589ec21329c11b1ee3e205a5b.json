{"ast":null,"code":"var _jsxFileName = \"/Users/diego_ramirezs/Documents/speedline/proto/src/App.js\";\nimport React from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showInfoWindow: false,\n      //hide/show infowindow\n      activeMarker: {},\n      //shows active marker upon click\n      selectedPlace: {},\n      //show infowindow to selected place upon a marker\n      mapLoaded: false,\n      stores: [{\n        city: \"Dease Lake\",\n        lat: 58.4374,\n        lng: -129.9994\n      }, {\n        city: \"Fort Nelson\",\n        lat: 58.8050,\n        lng: -122.6972\n      }, {\n        city: \"Terrace\",\n        lat: 54.5182,\n        lng: -128.6032\n      }, {\n        city: \"Prince George\",\n        lat: 53.9171,\n        lng: -122.7497\n      }, {\n        city: \"Whistler\",\n        lat: 50.1163,\n        lng: -122.9574\n      }, {\n        city: \"Revelstoke\",\n        lat: 50.9981,\n        lng: -118.1957\n      }, {\n        city: \"Creston\",\n        lat: 49.0955,\n        lng: -116.5135\n      }]\n    };\n\n    this.onMarkerClick = (props, marker, e) => {\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showInfoWindow: true\n      });\n    };\n\n    this.onClose = props => {\n      this.setState({\n        showInfoWindow: false,\n        activeMarker: null\n      });\n    };\n\n    this.displayMarkers = () => {\n      return this.state.stores.map((store, index) => {\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          position: {\n            lat: store.lat,\n            lng: store.lng\n          },\n          onClick: () => console.log(\"You clicked me!\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 14\n          }\n        });\n      });\n    };\n\n    this.displayInfoWindows = () => {\n      return this.state.stores.map((store, index) => {\n        return /*#__PURE__*/React.createElement(InfoWindow, {\n          key: index,\n          visible: this.state.mapLoaded,\n          location: {\n            lat: store.lat,\n            lng: store.lng\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }\n        }, store.city));\n      });\n    };\n\n    this.handleMapIdle = () => {\n      this.setState({\n        mapLoaded: true\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 5.2,\n      style: {\n        maxWidth: '70%',\n        maxHeight: '70%'\n      },\n      initialCenter: {\n        lat: 54.6569,\n        lng: -124.7417\n      },\n      onIdle: this.handleMapIdle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDAH-HZXwsL1DwvM7i0p3pPtrwrnzQhUxs'\n})(App);","map":{"version":3,"sources":["/Users/diego_ramirezs/Documents/speedline/proto/src/App.js"],"names":["React","Map","GoogleApiWrapper","InfoWindow","Marker","App","Component","state","showInfoWindow","activeMarker","selectedPlace","mapLoaded","stores","city","lat","lng","onMarkerClick","props","marker","e","setState","onClose","displayMarkers","map","store","index","console","log","displayInfoWindows","handleMapIdle","render","google","maxWidth","maxHeight","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { \n  Map, \n  GoogleApiWrapper,\n  InfoWindow,\n  Marker\n} from 'google-maps-react';\n\nclass App extends React.Component{\n  state = {\n    showInfoWindow: false, //hide/show infowindow\n    activeMarker: {}, //shows active marker upon click\n    selectedPlace: {}, //show infowindow to selected place upon a marker\n    mapLoaded: false,\n    stores: [\n      {city: \"Dease Lake\", lat: 58.4374, lng: -129.9994},\n      {city: \"Fort Nelson\", lat: 58.8050, lng: -122.6972},\n      {city: \"Terrace\", lat: 54.5182, lng: -128.6032},\n      {city: \"Prince George\", lat: 53.9171, lng: -122.7497},\n      {city: \"Whistler\", lat: 50.1163, lng: -122.9574},\n      {city: \"Revelstoke\", lat: 50.9981, lng: -118.1957},\n      {city: \"Creston\", lat: 49.0955, lng: -116.5135}\n    ]\n  }\n\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showInfoWindow: true\n    });\n  }\n\n  onClose = (props) => {\n    this.setState({\n      showInfoWindow: false,\n      activeMarker: null\n    });\n  }\n\n  displayMarkers = () => {\n    return this.state.stores.map((store, index) => {\n      return <Marker key={index} position={{\n        lat: store.lat,\n        lng: store.lng\n      }}\n      onClick={() => console.log(\"You clicked me!\")} />\n    })\n  }\n\n  displayInfoWindows = () => {\n    return this.state.stores.map((store, index) => {\n      return (\n        <InfoWindow \n          key={index}\n          visible={this.state.mapLoaded}\n          location={{\n            lat: store.lat,\n            lng: store.lng\n          }}\n        >\n          <span>{store.city}</span>\n        </InfoWindow>  \n      );\n    })\n  }\n\n\n  handleMapIdle = () => {\n    this.setState({\n      mapLoaded: true\n    });\n  }\n  \n  render(){\n\n    return (\n      <div className=\"App\">\n        <Map \n          google={this.props.google}\n          zoom={5.2}\n          style={{maxWidth: '70%', maxHeight: '70%'}}\n          initialCenter={{\n            lat: 54.6569,\n            lng: -124.7417\n          }}\n          onIdle={this.handleMapIdle}\n        >\n          {\n            //this.displayMarkers()\n            //this.displayInfoWindows()\n          }\n         \n        </Map>\n      </div>\n    );\n  }\n  \n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDAH-HZXwsL1DwvM7i0p3pPtrwrnzQhUxs'\n})(App);\n"]},"metadata":{},"sourceType":"module"}