{"ast":null,"code":"var _jsxFileName = \"/Users/diego_ramirezs/Documents/speedline/proto/src/App.js\";\nimport React from 'react';\nimport GoogleMap from 'google-map-react';\nimport CityInfo from './CityInfo';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      center: {},\n      stores: [],\n      locs: [{\n        diego: {\n          'lastname': 'Ramirez'\n        }\n      }, {\n        Juan: {\n          'lastname': 'Perez'\n        }\n      }]\n    };\n\n    this.handleClick = ev => {\n      const city = ev.target.parentElement.querySelector('.cityName').innerHTML;\n      const store = this.state.locs;\n      console.log(store);\n    };\n  }\n\n  getCenter() {\n    const stores = this.state.stores;\n    var latitude = 0;\n    var longitude = 0;\n\n    for (let i = 0; i < stores.length; i++) {\n      latitude += stores[i].coords.lat;\n      longitude += stores[i].coords.lng;\n    }\n\n    latitude = latitude / stores.length;\n    longitude = longitude / stores.length;\n    this.setState({\n      center: {\n        lat: latitude,\n        lng: longitude\n      }\n    });\n  }\n\n  componentDidMount() {\n    axios.get(\"http://api.openweathermap.org/data/2.5/group\", {\n      params: {\n        units: \"metric\",\n        id: \"6113365,5932311,6180144,5936286,5955902,6162949,6121621\",\n        appid: \"d768b86ac2b5b13b09964365eb5f0128\"\n      }\n    }).then(response => {\n      var data = response.data.list;\n      const cityWeathers = data.map(city => {\n        return {\n          name: city.name,\n          temp: city.main.temp,\n          coords: {\n            lat: city.coord.lat,\n            lng: city.coord.lon\n          },\n          tempMin: city.main.temp_min,\n          tempMax: city.main.temp_max,\n          pressure: city.main.pressure,\n          humidity: city.main.humidity,\n          description: city.weather[0].description,\n          windSpeed: city.wind.speed,\n          icon: \"http://openweathermap.org/img/wn/\" + city.weather[0].icon + \".png\"\n        };\n      });\n      this.setState({\n        stores: cityWeathers\n      });\n      this.getCenter();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        height: '70vh',\n        width: '60vw',\n        margin: '2px auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GoogleMap, {\n      bootstrapURLKeys: {\n        key: 'AIzaSyDAH-HZXwsL1DwvM7i0p3pPtrwrnzQhUxs'\n      },\n      defaultCenter: {\n        lat: 54.0562,\n        lng: -124.7414\n      },\n      defaultZoom: 5.4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 8\n      }\n    }, this.state.stores.map((store, index) => {\n      return /*#__PURE__*/React.createElement(CityInfo, {\n        key: index,\n        lat: Math.ceil(store.coords.lat),\n        lng: store.coords.lng,\n        store: store,\n        handleClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      });\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/diego_ramirezs/Documents/speedline/proto/src/App.js"],"names":["React","GoogleMap","CityInfo","axios","App","Component","state","center","stores","locs","diego","Juan","handleClick","ev","city","target","parentElement","querySelector","innerHTML","store","console","log","getCenter","latitude","longitude","i","length","coords","lat","lng","setState","componentDidMount","get","params","units","id","appid","then","response","data","list","cityWeathers","map","name","temp","main","coord","lon","tempMin","temp_min","tempMax","temp_max","pressure","humidity","description","weather","windSpeed","wind","speed","icon","render","height","width","margin","key","index","Math","ceil"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,IAAI,EAAE,CACJ;AAACC,QAAAA,KAAK,EAAE;AACN,sBAAY;AADN;AAAR,OADI,EAIJ;AAACC,QAAAA,IAAI,EAAE;AACL,sBAAY;AADP;AAAP,OAJI;AAHA,KADuB;;AAAA,SAgE/BC,WAhE+B,GAgEhBC,EAAD,IAAQ;AACpB,YAAMC,IAAI,GAAGD,EAAE,CAACE,MAAH,CAAUC,aAAV,CAAwBC,aAAxB,CAAsC,WAAtC,EAAmDC,SAAhE;AACA,YAAMC,KAAK,GAAG,KAAKb,KAAL,CAAWG,IAAzB;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KApE8B;AAAA;;AAc/BG,EAAAA,SAAS,GAAE;AACT,UAAMd,MAAM,GAAG,KAAKF,KAAL,CAAWE,MAA1B;AACA,QAAIe,QAAQ,GAAG,CAAf;AACA,QAAIC,SAAS,GAAG,CAAhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAACjB,MAAM,CAACkB,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACnCF,MAAAA,QAAQ,IAAIf,MAAM,CAACiB,CAAD,CAAN,CAAUE,MAAV,CAAiBC,GAA7B;AACAJ,MAAAA,SAAS,IAAIhB,MAAM,CAACiB,CAAD,CAAN,CAAUE,MAAV,CAAiBE,GAA9B;AACD;;AAEDN,IAAAA,QAAQ,GAAGA,QAAQ,GAAGf,MAAM,CAACkB,MAA7B;AACAF,IAAAA,SAAS,GAAGA,SAAS,GAAGhB,MAAM,CAACkB,MAA/B;AACA,SAAKI,QAAL,CAAc;AACZvB,MAAAA,MAAM,EAAE;AAACqB,QAAAA,GAAG,EAAEL,QAAN;AAAgBM,QAAAA,GAAG,EAAEL;AAArB;AADI,KAAd;AAGD;;AAEDO,EAAAA,iBAAiB,GAAE;AACjB5B,IAAAA,KAAK,CAAC6B,GAAN,CAAU,8CAAV,EAA0D;AACzDC,MAAAA,MAAM,EAAE;AACPC,QAAAA,KAAK,EAAE,QADA;AAEPC,QAAAA,EAAE,EAAE,yDAFG;AAGPC,QAAAA,KAAK,EAAE;AAHA;AADiD,KAA1D,EAMGC,IANH,CAMQC,QAAQ,IAAI;AAClB,UAAIC,IAAI,GAAGD,QAAQ,CAACC,IAAT,CAAcC,IAAzB;AACA,YAAMC,YAAY,GAAGF,IAAI,CAACG,GAAL,CAAS5B,IAAI,IAAI;AACpC,eACE;AACE6B,UAAAA,IAAI,EAAE7B,IAAI,CAAC6B,IADb;AAEEC,UAAAA,IAAI,EAAE9B,IAAI,CAAC+B,IAAL,CAAUD,IAFlB;AAGEjB,UAAAA,MAAM,EAAE;AAACC,YAAAA,GAAG,EAAEd,IAAI,CAACgC,KAAL,CAAWlB,GAAjB;AAAsBC,YAAAA,GAAG,EAAEf,IAAI,CAACgC,KAAL,CAAWC;AAAtC,WAHV;AAIEC,UAAAA,OAAO,EAAElC,IAAI,CAAC+B,IAAL,CAAUI,QAJrB;AAKEC,UAAAA,OAAO,EAAEpC,IAAI,CAAC+B,IAAL,CAAUM,QALrB;AAMEC,UAAAA,QAAQ,EAAEtC,IAAI,CAAC+B,IAAL,CAAUO,QANtB;AAOEC,UAAAA,QAAQ,EAAEvC,IAAI,CAAC+B,IAAL,CAAUQ,QAPtB;AAQEC,UAAAA,WAAW,EAAExC,IAAI,CAACyC,OAAL,CAAa,CAAb,EAAgBD,WAR/B;AASEE,UAAAA,SAAS,EAAE1C,IAAI,CAAC2C,IAAL,CAAUC,KATvB;AAUEC,UAAAA,IAAI,EAAE,sCAAoC7C,IAAI,CAACyC,OAAL,CAAa,CAAb,EAAgBI,IAApD,GAAyD;AAVjE,SADF;AAcD,OAfoB,CAArB;AAiBA,WAAK7B,QAAL,CAAc;AACZtB,QAAAA,MAAM,EAAEiC;AADI,OAAd;AAIA,WAAKnB,SAAL;AACD,KA9BD;AA+BD;;AAQDsC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAE,MAAxB;AAAgCC,QAAAA,MAAM,EAAE;AAAxC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,SAAD;AACC,MAAA,gBAAgB,EAAE;AAAEC,QAAAA,GAAG,EAAE;AAAP,OADnB;AAEC,MAAA,aAAa,EAAE;AAACpC,QAAAA,GAAG,EAAE,OAAN;AAAeC,QAAAA,GAAG,EAAE,CAAC;AAArB,OAFhB;AAGC,MAAA,WAAW,EAAE,GAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,KAAKvB,KAAL,CAAWE,MAAX,CAAkBkC,GAAlB,CAAsB,CAACvB,KAAD,EAAQ8C,KAAR,KAAkB;AACrC,0BACE,oBAAC,QAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,GAAG,EAAEC,IAAI,CAACC,IAAL,CAAUhD,KAAK,CAACQ,MAAN,CAAaC,GAAvB,CAFP;AAGE,QAAA,GAAG,EAAET,KAAK,CAACQ,MAAN,CAAaE,GAHpB;AAIE,QAAA,KAAK,EAAEV,KAJT;AAKE,QAAA,WAAW,EAAE,KAAKP,WALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD,KAVF,CALJ,CADD,CADF;AAuBD;;AA9F8B;;AAiGjC,eAAeR,GAAf","sourcesContent":["import React from 'react';\nimport GoogleMap from 'google-map-react';\nimport CityInfo from './CityInfo';\nimport axios from 'axios';\n\nclass App extends React.Component{\n  state = {\n    center: {},\n    stores: [],\n    locs: [\n      {diego: {\n        'lastname': 'Ramirez'\n      }},\n      {Juan: {\n        'lastname': 'Perez'\n      }}\n    ]\n  }\n  \n  getCenter(){\n    const stores = this.state.stores;\n    var latitude = 0;\n    var longitude = 0;\n    for (let i = 0; i<stores.length; i++){\n      latitude += stores[i].coords.lat;\n      longitude += stores[i].coords.lng;\n    }\n\n    latitude = latitude / stores.length;\n    longitude = longitude / stores.length;\n    this.setState({\n      center: {lat: latitude, lng: longitude}\n    })\n  } \n\n  componentDidMount(){\n    axios.get(\"http://api.openweathermap.org/data/2.5/group\", {\n     params: {\n      units: \"metric\",\n      id: \"6113365,5932311,6180144,5936286,5955902,6162949,6121621\",\n      appid: \"d768b86ac2b5b13b09964365eb5f0128\"\n     }\n    }).then(response => {\n      var data = response.data.list;\n      const cityWeathers = data.map(city => {\n        return (\n          {\n            name: city.name,\n            temp: city.main.temp,\n            coords: {lat: city.coord.lat, lng: city.coord.lon},\n            tempMin: city.main.temp_min,\n            tempMax: city.main.temp_max,\n            pressure: city.main.pressure,\n            humidity: city.main.humidity,\n            description: city.weather[0].description,\n            windSpeed: city.wind.speed,\n            icon: \"http://openweathermap.org/img/wn/\"+city.weather[0].icon+\".png\"\n          }\n        );\n      });\n\n      this.setState({\n        stores: cityWeathers\n      });\n\n      this.getCenter();\n    });\n  }\n\n  handleClick = (ev) => {\n    const city = ev.target.parentElement.querySelector('.cityName').innerHTML;\n    const store = this.state.locs;\n    console.log(store);\n  }\n\n  render(){\n    return (\n      <div className=\"App\" style={{height: '70vh', width: '60vw', margin: '2px auto'}}>\n       <GoogleMap\n        bootstrapURLKeys={{ key: 'AIzaSyDAH-HZXwsL1DwvM7i0p3pPtrwrnzQhUxs'}}\n        defaultCenter={{lat: 54.0562, lng: -124.7414}}\n        defaultZoom={5.4} >\n\n          {this.state.stores.map((store, index) => {\n              return (\n                <CityInfo \n                  key={index} \n                  lat={Math.ceil(store.coords.lat)} \n                  lng={store.coords.lng} \n                  store={store}\n                  handleClick={this.handleClick}\n                />\n              );\n            })\n          }\n\n        </GoogleMap>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}